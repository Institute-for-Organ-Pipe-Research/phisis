{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Dokumentacja: Badawcza implementacja technologii Viscount Physis (US7442869B2)","text":""},{"location":"#cel-projektu","title":"Cel projektu","text":"<p>Celem projektu jest zaimplementowanie fizycznego modelu d\u017awi\u0119ku organowego zgodnego z patentem US7442869B2, stosowanym m.in. w technologii Viscount Physis\u2122. Implementacja ta umo\u017cliwia analiz\u0119 struktury modelu, generowanie tonu organowego oraz eksperymentowanie z parametrami modelu.</p> <p>\u26a0\ufe0f Uwaga prawna: Technologia Viscount Physis\u2122 jest obj\u0119ta ochron\u0105 patentow\u0105:</p> <ul> <li>USA Patent: US7442869B2</li> <li>Europejski patent: EP1639334B1</li> <li>W\u0142a\u015bciciel: VISCOUNT INTERNATIONAL S.p.A.</li> </ul> <p>Implementacja ma charakter naukowo-edukacyjny i nie s\u0142u\u017cy celom komercyjnym.</p>"},{"location":"#struktura-gowna","title":"Struktura g\u0142\u00f3wna","text":""},{"location":"#physicalmodelorgan","title":"<code>PhysicalModelOrgan</code>","text":"<p>G\u0142\u00f3wna klasa odpowiedzialna za renderowanie d\u017awi\u0119ku nuty z wykorzystaniem trzech komponent\u00f3w:</p> <ul> <li><code>HarmonicGenerator</code> \u2013 komponent bazowy</li> <li><code>NoiseGenerator</code> \u2013 model generowania szumu</li> <li><code>LinearResonator</code> \u2013 rezonator i filtracja</li> </ul> <p>Dzia\u0142a na bazie parametr\u00f3w <code>params</code> i domy\u015blnej cz\u0119stotliwo\u015bci pr\u00f3bkowania 44100 Hz.</p>"},{"location":"#default_params","title":"<code>default_params()</code>","text":"<p>Zwraca s\u0142ownik parametr\u00f3w zgodny z warto\u015bciami domy\u015blnymi opisanymi w patencie. Mo\u017cliwa jest aktualizacja dowolnego parametru, np. <code>GAIN1</code>, <code>NGAIN</code>, <code>TFBK</code>, <code>attack_time</code> itd.</p>"},{"location":"#komponenty-syntezy","title":"Komponenty syntezy","text":""},{"location":"#harmonicgenerator","title":"<code>HarmonicGenerator</code>","text":"<p>Odpowiada za podstawowy sygna\u0142 d\u017awi\u0119kowy (oscylator harmoniczny, obwiednia, modulacja amplitudy, linia op\u00f3\u017anienia, filtr BP, funkcja nieliniowa).</p>"},{"location":"#noisegenerator","title":"<code>NoiseGenerator</code>","text":"<p>Bazuje na strukturze \"NOISE BOX\" z filtrami dolnoprzepustowymi, losow\u0105 modulacj\u0105 i limitatorem pr\u0119dko\u015bci zmian.</p>"},{"location":"#linearresonator","title":"<code>LinearResonator</code>","text":"<p>Implementuje rezonator akustyczny zgodny z rysunkiem Fig. 15 z patentu. Zawiera filtr dolno- i g\u00f3rnoprzepustowy, filtr wszechprzepustowy i lini\u0119 op\u00f3\u017anienia z regulowanym sprz\u0119\u017ceniem zwrotnym.</p>"},{"location":"#envelopegenerator","title":"<code>EnvelopeGenerator</code>","text":"<p>Obwiednia typu ADSR dla harmonicznych i oddzielna dla szumu.</p>"},{"location":"#lowfrequencyoscillator","title":"<code>LowFrequencyOscillator</code>","text":"<p>Wewn\u0119trzny LFO (modulacja amplitudy i cz\u0119stotliwo\u015bci).</p>"},{"location":"#frequencymodulator","title":"<code>FrequencyModulator</code>","text":"<p>Dodaje subteln\u0105 losow\u0105 modulacj\u0119 cz\u0119stotliwo\u015bci na poziomie cyklu.</p>"},{"location":"#ratelimiter","title":"<code>RateLimiter</code>","text":"<p>Ogranicza pr\u0119dko\u015b\u0107 zmian sygna\u0142u (dla szumu) zgodnie z Fig. 12.</p>"},{"location":"#przykadowe-uzycie","title":"Przyk\u0142adowe u\u017cycie","text":"<pre><code>if __name__ == \"__main__\":\n    organ = PhysicalModelOrgan(sample_rate=44100)\n    sine_params = organ.default_params()\n    sine_params.update({\n        'CLIP1': 1.0, 'CLIP2': 1.0,\n        'GAIN1': 1.0, 'GAIN2': 0.0,\n        'GAIND': 0.0, 'GAINF': 1.0,\n        'CDEL': 0.0, 'CBYP': 1.0,\n        'NGAIN': 0.0, 'FBK': 0.0, 'TFBK': 0.0,\n        'attack_time': 0.01, 'release_time': 0.01,\n        'sustain_level': 1.0\n    })\n    audio = organ.render_note(440.0, 3.0, params=sine_params)\n    wav.write(\"output/organ_pipe.wav\", 44100, (audio * 32767).astype(np.int16))\n</code></pre>"},{"location":"#wymagania","title":"Wymagania","text":"<ul> <li>Python 3.8+</li> <li>NumPy</li> <li>SciPy</li> </ul> <pre><code>pip install numpy scipy\n</code></pre>"},{"location":"#planowane-rozszerzenia","title":"Planowane rozszerzenia","text":"<ul> <li>Interfejs u\u017cytkownika do eksploracji parametr\u00f3w</li> <li>Uczenie maszynowe doboru parametr\u00f3w na podstawie dostarczonej pr\u00f3bki d\u017awi\u0119ku oczyszczonej z pog\u0142osu</li> <li>Symulacja strojenia i przestrzennego rozmieszczenia piszcza\u0142ek</li> </ul>"},{"location":"#licencja","title":"Licencja","text":"<p>Projekt edukacyjny. Brak powi\u0105za\u0144 z producentem Viscount. </p>"},{"location":"akustyka-checkpoint/","title":"Dokumentacja: Symulacja Organ\u00f3w w Przestrzeni 3D","text":""},{"location":"akustyka-checkpoint/#wprowadzenie","title":"Wprowadzenie","text":"<p>Projekt symulacji organ\u00f3w w przestrzeni 3D pozwala na odwzorowanie kierunkowo\u015bci d\u017awi\u0119ku na podstawie pozycji sekcji organowych i po\u0142o\u017cenia s\u0142uchacza. Model uwzgl\u0119dnia efekt ITD (Interaural Time Difference - mi\u0119dzyskrzelowa r\u00f3\u017cnica czasu) i ILD (Interaural Level Difference - mi\u0119dzyskrzelowa r\u00f3\u017cnica poziomu d\u017awi\u0119ku) dla realistycznej percepcji przestrzennej.</p>"},{"location":"akustyka-checkpoint/#struktura-modelu","title":"Struktura Modelu","text":"<ol> <li>Klasa Pipe</li> </ol> <p>Reprezentuje pojedyncz\u0105 piszcza\u0142k\u0119 w sekcji organowej.</p> <p>Atrybuty:</p> <p>pitch: Cz\u0119stotliwo\u015b\u0107 d\u017awi\u0119ku (Hz).</p> <p>position: Pozycja w ramach sekcji organowej (nie w przestrzeni 3D).</p> <ol> <li>Klasa OrganSection</li> </ol> <p>Reprezentuje sekcj\u0119 organow\u0105, w kt\u00f3rej znajduj\u0105 si\u0119 piszcza\u0142ki.</p> <p>Atrybuty:</p> <p>name: Nazwa sekcji (np. Swell, Great).</p> <p>position: Pozycja sekcji w przestrzeni 3D.</p> <p>pipes: Lista piszcza\u0142ek w sekcji.</p> <p>Metody:</p> <p>add_pipe(pitch): Dodaje piszcza\u0142k\u0119 o podanej cz\u0119stotliwo\u015bci.</p> <p>arrange_pipes(arrangement_type): Rozmieszcza piszcza\u0142ki w sekcji w spos\u00f3b liniowy, zbie\u017cny lub rozbie\u017cny.</p> <ol> <li>Klasa SoundSource3D</li> </ol> <p>Reprezentuje \u017ar\u00f3d\u0142o d\u017awi\u0119ku w przestrzeni 3D.</p> <p>Atrybuty:</p> <p>position: Pozycja \u017ar\u00f3d\u0142a d\u017awi\u0119ku w przestrzeni.</p> <p>Metody:</p> <p>compute_itd(listener_position): Oblicza ITD na podstawie odleg\u0142o\u015bci do lewego i prawego ucha.</p> <p>compute_ild(listener_position): Oblicza ILD na podstawie odleg\u0142o\u015bci do s\u0142uchacza.</p> <ol> <li>Klasa SoundSimulation3D</li> </ol> <p>Symuluje propagacj\u0119 d\u017awi\u0119ku i jego percepcj\u0119 przez s\u0142uchacza.</p> <p>Atrybuty:</p> <p>listener_position: Pozycja s\u0142uchacza w przestrzeni 3D.</p> <p>sounds: Lista \u017ar\u00f3de\u0142 d\u017awi\u0119ku.</p> <p>Metody:</p> <p>add_sound_source(position): Dodaje \u017ar\u00f3d\u0142o d\u017awi\u0119ku do symulacji.</p> <p>simulate_sound(sound_wave, sample_rate): Symuluje odbi\u00f3r d\u017awi\u0119ku przez oba uszy, uwzgl\u0119dniaj\u0105c ITD i ILD.</p> <p>Proces Symulacji</p> <p>Tworzymy instancj\u0119 SoundSimulation3D.</p> <p>Definiujemy sekcje organowe (OrganSection) i ich pozycje.</p> <p>Dodajemy piszcza\u0142ki do sekcji i rozmieszczamy je w ramach sekcji.</p> <p>Ka\u017cda sekcja zostaje dodana jako \u017ar\u00f3d\u0142o d\u017awi\u0119ku w symulacji.</p> <p>Generujemy fal\u0119 d\u017awi\u0119kow\u0105 (np. sinusoidaln\u0105) i przetwarzamy j\u0105 z uwzgl\u0119dnieniem ITD i ILD.</p> <p>Finalne sygna\u0142y dla lewego i prawego ucha mog\u0105 zosta\u0107 przes\u0142ane do systemu audio.</p>"},{"location":"akustyka/","title":"Dokumentacja: Symulacja Organ\u00f3w w Przestrzeni 3D","text":""},{"location":"akustyka/#wprowadzenie","title":"Wprowadzenie","text":"<p>Projekt symulacji organ\u00f3w w przestrzeni 3D pozwala na odwzorowanie kierunkowo\u015bci d\u017awi\u0119ku na podstawie pozycji sekcji organowych i po\u0142o\u017cenia s\u0142uchacza. Model uwzgl\u0119dnia efekt ITD (Interaural Time Difference - mi\u0119dzyskrzelowa r\u00f3\u017cnica czasu) i ILD (Interaural Level Difference - mi\u0119dzyskrzelowa r\u00f3\u017cnica poziomu d\u017awi\u0119ku) dla realistycznej percepcji przestrzennej.</p>"},{"location":"akustyka/#struktura-modelu","title":"Struktura Modelu","text":"<ol> <li>Klasa Pipe</li> </ol> <p>Reprezentuje pojedyncz\u0105 piszcza\u0142k\u0119 w sekcji organowej.</p> <p>Atrybuty:</p> <p>pitch: Cz\u0119stotliwo\u015b\u0107 d\u017awi\u0119ku (Hz).</p> <p>position: Pozycja w ramach sekcji organowej (nie w przestrzeni 3D).</p> <ol> <li>Klasa OrganSection</li> </ol> <p>Reprezentuje sekcj\u0119 organow\u0105, w kt\u00f3rej znajduj\u0105 si\u0119 piszcza\u0142ki.</p> <p>Atrybuty:</p> <p>name: Nazwa sekcji (np. Swell, Great).</p> <p>position: Pozycja sekcji w przestrzeni 3D.</p> <p>pipes: Lista piszcza\u0142ek w sekcji.</p> <p>Metody:</p> <p>add_pipe(pitch): Dodaje piszcza\u0142k\u0119 o podanej cz\u0119stotliwo\u015bci.</p> <p>arrange_pipes(arrangement_type): Rozmieszcza piszcza\u0142ki w sekcji w spos\u00f3b liniowy, zbie\u017cny lub rozbie\u017cny.</p> <ol> <li>Klasa SoundSource3D</li> </ol> <p>Reprezentuje \u017ar\u00f3d\u0142o d\u017awi\u0119ku w przestrzeni 3D.</p> <p>Atrybuty:</p> <p>position: Pozycja \u017ar\u00f3d\u0142a d\u017awi\u0119ku w przestrzeni.</p> <p>Metody:</p> <p>compute_itd(listener_position): Oblicza ITD na podstawie odleg\u0142o\u015bci do lewego i prawego ucha.</p> <p>compute_ild(listener_position): Oblicza ILD na podstawie odleg\u0142o\u015bci do s\u0142uchacza.</p> <ol> <li>Klasa SoundSimulation3D</li> </ol> <p>Symuluje propagacj\u0119 d\u017awi\u0119ku i jego percepcj\u0119 przez s\u0142uchacza.</p> <p>Atrybuty:</p> <p>listener_position: Pozycja s\u0142uchacza w przestrzeni 3D.</p> <p>sounds: Lista \u017ar\u00f3de\u0142 d\u017awi\u0119ku.</p> <p>Metody:</p> <p>add_sound_source(position): Dodaje \u017ar\u00f3d\u0142o d\u017awi\u0119ku do symulacji.</p> <p>simulate_sound(sound_wave, sample_rate): Symuluje odbi\u00f3r d\u017awi\u0119ku przez oba uszy, uwzgl\u0119dniaj\u0105c ITD i ILD.</p> <p>Proces Symulacji</p> <p>Tworzymy instancj\u0119 SoundSimulation3D.</p> <p>Definiujemy sekcje organowe (OrganSection) i ich pozycje.</p> <p>Dodajemy piszcza\u0142ki do sekcji i rozmieszczamy je w ramach sekcji.</p> <p>Ka\u017cda sekcja zostaje dodana jako \u017ar\u00f3d\u0142o d\u017awi\u0119ku w symulacji.</p> <p>Generujemy fal\u0119 d\u017awi\u0119kow\u0105 (np. sinusoidaln\u0105) i przetwarzamy j\u0105 z uwzgl\u0119dnieniem ITD i ILD.</p> <p>Finalne sygna\u0142y dla lewego i prawego ucha mog\u0105 zosta\u0107 przes\u0142ane do systemu audio.</p>"},{"location":"denoising/","title":"Dokumentacja: Badawcza implementacja technologii Viscount Physis (US7442869B2)","text":""},{"location":"denoising/#cel-projektu","title":"Cel projektu","text":"<p>Celem projektu jest zaimplementowanie fizycznego modelu d\u017awi\u0119ku organowego zgodnego z patentem US7442869B2, stosowanym m.in. w technologii Viscount Physis\u2122. Implementacja ta umo\u017cliwia analiz\u0119 struktury modelu, generowanie tonu organowego oraz eksperymentowanie z parametrami modelu.</p> <p>\u26a0\ufe0f Uwaga prawna: Technologia Viscount Physis\u2122 jest obj\u0119ta ochron\u0105 patentow\u0105:</p> <ul> <li>USA Patent: US7442869B2</li> <li>Europejski patent: EP1639334B1</li> <li>W\u0142a\u015bciciel: VISCOUNT INTERNATIONAL S.p.A.</li> </ul> <p>Implementacja ma charakter naukowo-edukacyjny i nie s\u0142u\u017cy celom komercyjnym.</p>"},{"location":"denoising/#struktura-gowna","title":"Struktura g\u0142\u00f3wna","text":""},{"location":"denoising/#physicalmodelorgan","title":"<code>PhysicalModelOrgan</code>","text":"<p>G\u0142\u00f3wna klasa odpowiedzialna za renderowanie d\u017awi\u0119ku nuty z wykorzystaniem trzech komponent\u00f3w:</p> <ul> <li><code>HarmonicGenerator</code> \u2013 komponent bazowy</li> <li><code>NoiseGenerator</code> \u2013 model generowania szumu</li> <li><code>LinearResonator</code> \u2013 rezonator i filtracja</li> </ul> <p>Dzia\u0142a na bazie parametr\u00f3w <code>params</code> i domy\u015blnej cz\u0119stotliwo\u015bci pr\u00f3bkowania 44100 Hz.</p>"},{"location":"denoising/#default_params","title":"<code>default_params()</code>","text":"<p>Zwraca s\u0142ownik parametr\u00f3w zgodny z warto\u015bciami domy\u015blnymi opisanymi w patencie. Mo\u017cliwa jest aktualizacja dowolnego parametru, np. <code>GAIN1</code>, <code>NGAIN</code>, <code>TFBK</code>, <code>attack_time</code> itd.</p>"},{"location":"denoising/#komponenty-syntezy","title":"Komponenty syntezy","text":""},{"location":"denoising/#harmonicgenerator","title":"<code>HarmonicGenerator</code>","text":"<p>Odpowiada za podstawowy sygna\u0142 d\u017awi\u0119kowy (oscylator harmoniczny, obwiednia, modulacja amplitudy, linia op\u00f3\u017anienia, filtr BP, funkcja nieliniowa).</p>"},{"location":"denoising/#noisegenerator","title":"<code>NoiseGenerator</code>","text":"<p>Bazuje na strukturze \"NOISE BOX\" z filtrami dolnoprzepustowymi, losow\u0105 modulacj\u0105 i limitatorem pr\u0119dko\u015bci zmian.</p>"},{"location":"denoising/#linearresonator","title":"<code>LinearResonator</code>","text":"<p>Implementuje rezonator akustyczny zgodny z rysunkiem Fig. 15 z patentu. Zawiera filtr dolno- i g\u00f3rnoprzepustowy, filtr wszechprzepustowy i lini\u0119 op\u00f3\u017anienia z regulowanym sprz\u0119\u017ceniem zwrotnym.</p>"},{"location":"denoising/#envelopegenerator","title":"<code>EnvelopeGenerator</code>","text":"<p>Obwiednia typu ADSR dla harmonicznych i oddzielna dla szumu.</p>"},{"location":"denoising/#lowfrequencyoscillator","title":"<code>LowFrequencyOscillator</code>","text":"<p>Wewn\u0119trzny LFO (modulacja amplitudy i cz\u0119stotliwo\u015bci).</p>"},{"location":"denoising/#frequencymodulator","title":"<code>FrequencyModulator</code>","text":"<p>Dodaje subteln\u0105 losow\u0105 modulacj\u0119 cz\u0119stotliwo\u015bci na poziomie cyklu.</p>"},{"location":"denoising/#ratelimiter","title":"<code>RateLimiter</code>","text":"<p>Ogranicza pr\u0119dko\u015b\u0107 zmian sygna\u0142u (dla szumu) zgodnie z Fig. 12.</p>"},{"location":"denoising/#narzedzie-organ-pipe-denoiser-tools","title":"Narz\u0119dzie: Organ Pipe Denoiser (Tools)","text":"<p>Narz\u0119dzie to s\u0142u\u017cy do przygotowania pr\u00f3bek d\u017awi\u0119kowych piszcza\u0142ek organowych do uczenia maszynowego, zw\u0142aszcza do doboru parametr\u00f3w syntezy fizycznej zgodnie z patentem.</p>"},{"location":"denoising/#funkcje-narzedzia","title":"Funkcje narz\u0119dzia:","text":"<ul> <li>Redukcja pog\u0142osu (reverb reduction) z oryginalnych nagra\u0144 A0 i R0-R3</li> <li>Generowanie syntetycznego ogona R na podstawie fazy sustain pr\u00f3bki A0 lub jako filtrowany szum (sucha akustyka)</li> <li>\u0141\u0105czenie pr\u00f3bek z crossfade w celu zachowania naturalno\u015bci brzmienia</li> <li>GUI do wyboru folder\u00f3w, pr\u00f3bek i ustawie\u0144 parametr\u00f3w</li> <li>Przetwarzanie wsadowe wielu pr\u00f3bek</li> </ul>"},{"location":"denoising/#wymagania","title":"Wymagania:","text":"<ul> <li>Python 3.8+</li> <li>Biblioteki: numpy, scipy, soundfile, tkinter</li> </ul>"},{"location":"denoising/#instalacja-bibliotek","title":"Instalacja bibliotek:","text":"<p>```bash pip install numpy scipy soundfile</p>"},{"location":"phisis/","title":"Dokumentacja parametr\u00f3w syntezy d\u017awi\u0119ku organ\u00f3w piszcza\u0142kowych","text":""},{"location":"phisis/#wprowadzenie","title":"Wprowadzenie","text":"<p>Niniejsza dokumentacja opisuje parametry u\u017cywane w implementacji syntezy d\u017awi\u0119ku organ\u00f3w piszcza\u0142kowych metod\u0105 modelowania fizycznego. Dokumentacja pomo\u017ce w zrozumieniu wp\u0142ywu poszczeg\u00f3lnych parametr\u00f3w na brzmienie generowanego d\u017awi\u0119ku. \u015acie\u017cka poznawania wp\u0142ywu parametr\u00f3w</p> <p>Aby efektywnie nauczy\u0107 si\u0119 wp\u0142ywu parametr\u00f3w na brzmienie, zalecam nast\u0119puj\u0105c\u0105 \u015bcie\u017ck\u0119 eksperyment\u00f3w:</p> <pre><code>- Parametry podstawowe (cz\u0119stotliwo\u015b\u0107, d\u0142ugo\u015b\u0107 piszcza\u0142ki)\n- Modulacje i nieliniowo\u015bci (g\u0142\u0119boko\u015b\u0107 modulacji, poziom clippingu)\n- Komponent szumowy (poziom szumu, skala szybko\u015bci)\n- Filtracja w rezonatorze (wsp\u00f3\u0142czynniki filtr\u00f3w)\n- Obwiednia czasowa (czasy ataku, wybrzmiewania, etc.)\n- Zaawansowane interakcje mi\u0119dzy parametrami\n</code></pre> <p>Dokumentacja parametr\u00f3w</p> <p>Parametry podstawowe:</p> <pre><code>f0 (Hz) - cz\u0119stotliwo\u015b\u0107 podstawowa generowanego d\u017awi\u0119ku\n\n    - Wp\u0142yw: Okre\u015bla wysoko\u015b\u0107 d\u017awi\u0119ku\n    - Typowe warto\u015bci: 440 Hz (A4), zakres 20-4000 Hz\n    - Eksperyment: Zmieniaj o oktawy (podwajaj/haluj warto\u015b\u0107)\n\npipe_length (m) - d\u0142ugo\u015b\u0107 wirtualnej piszcza\u0142ki\n\n    - Wp\u0142yw: Wp\u0142ywa na charakterystyk\u0119 rezonansu\n    - Typowe warto\u015bci: 0.5-8 m (im d\u0142u\u017csza, tym ni\u017csze cz\u0119stotliwo\u015bci rezonansowe)\n    - Eksperyment: Dostosuj do f0 (d\u0142u\u017csze dla ni\u017cszych d\u017awi\u0119k\u00f3w)\n</code></pre> <p>Parametry modulacji i nieliniowo\u015bci</p> <pre><code>mod_depth (bezwymiarowy) - g\u0142\u0119boko\u015b\u0107 modulacji cz\u0119stotliwo\u015bci\n\n    - Wp\u0142yw: Tworzy naturalne wahania wysoko\u015bci d\u017awi\u0119ku\n    - Typowe warto\u015bci: 0.001-0.01 (wi\u0119ksze = bardziej \"\u017cywy\" d\u017awi\u0119k)\n    - Eksperyment: Zwi\u0119kszaj stopniowo od 0.001\n\nlfo_freq (Hz) - cz\u0119stotliwo\u015b\u0107 modulacji niskocz\u0119stotliwo\u015bciowej\n\n    - Wp\u0142yw: Szybko\u015b\u0107 waha\u0144 wysoko\u015bci d\u017awi\u0119ku\n    - Typowe warto\u015bci: 2-8 Hz\n    - Eksperyment: Testuj z r\u00f3\u017cnymi mod_depth\n\nnonlinear_gain (bezwymiarowy) - wzmocnienie nieliniowego przetwarzania\n\n    - Wp\u0142yw: Wp\u0142ywa na bogactwo harmoniczne\n    - Typowe warto\u015bci: 1.5-2.5\n    - Eksperyment: Zwi\u0119kszaj dla bardziej \"metalicznego\" brzmienia\n\nclip_level (bezwymiarowy) - poziom ograniczenia amplitudy\n\n    - Wp\u0142yw: Wp\u0142ywa na ostrzejsze przyci\u0119cie sygna\u0142u\n    - Typowe warto\u015bci: 0.7-1.0\n    - Eksperyment: Zmniejszaj dla bardziej agresywnego brzmienia\n</code></pre> <p>Parametry szumu</p> <pre><code>noise_level (bezwymiarowy) - poziom komponentu szumowego\n\n    - Wp\u0142yw: Dodaje szumy ataku (\"chiff\") i t\u0142o\n    - Typowe warto\u015bci: 0.01-0.1\n    - Eksperyment: Zwi\u0119kszaj dla bardziej \"dmuchanego\" brzmienia\n\nrate_scale (bezwymiarowy) - skala szybko\u015bci limitera\n\n    - Wp\u0142yw: Kontroluje gwa\u0142towno\u015b\u0107 zmian szumu\n    - Typowe warto\u015bci: 0.1-0.5\n    - Eksperyment: Mniejsze warto\u015bci = p\u0142ynniejsze przej\u015bcia\n</code></pre> <p>Parametry rezonatora</p> <pre><code>lp_coeffs (tablica) - wsp\u00f3\u0142czynniki filtra dolnoprzepustowego\n\n    - Wp\u0142yw: T\u0142umi wysokie cz\u0119stotliwo\u015bci w rezonatorze\n    - Typowe warto\u015bci: [0.85, -0.15]\n    - Eksperyment: Zmieniaj pierwszy wsp\u00f3\u0142czynnik (0.7-0.95)\n\nhp_coeffs (tablica) - wsp\u00f3\u0142czynniki filtra g\u00f3rnoprzepustowego\n\n    - Wp\u0142yw: Usuwa sk\u0142adow\u0105 sta\u0142\u0105\n    - Typowe warto\u015bci: [0.95, -0.95]\n    - Eksperyment: Rzadko wymaga zmian\n\nap_coeffs (tablica) - wsp\u00f3\u0142czynniki filtra all-pass\n\n    - Wp\u0142yw: Wp\u0142ywa na charakterystyk\u0119 fazow\u0105\n    - Typowe warto\u015bci: [0.7, -0.7]\n    - Eksperyment: Testuj r\u00f3\u017cne warto\u015bci (0.5-0.9)\n\ntfbk (bezwymiarowy) - wsp\u00f3\u0142czynnik sprz\u0119\u017cenia zwrotnego\n\n    - Wp\u0142yw: Si\u0142a rezonansu\n    - Typowe warto\u015bci: 0.6-0.8 (dodatnie dla otwartych, ujemne dla zamkni\u0119tych piszcza\u0142ek)\n    - Eksperyment: Zwi\u0119kszaj dla d\u0142u\u017cszego wybrzmiewania\n</code></pre> <p>Parametry obwiedni</p> <pre><code>attack_time (s) - czas ataku\n\n    - Wp\u0142yw: Jak szybko d\u017awi\u0119k osi\u0105ga pe\u0142n\u0105 g\u0142o\u015bno\u015b\u0107\n    - Typowe warto\u015bci: 0.05-0.2 s\n    - Eksperyment: Kr\u00f3tsze = bardziej perkusyjne brzmienie\n\ndecay_time (s) - czas wybrzmiewania do poziomu sustain\n\n    - Wp\u0142yw: Jak szybko d\u017awi\u0119k przechodzi do poziomu podtrzymania\n    - Typowe warto\u015bci: 0.1-0.3 s\n    - Eksperyment: D\u0142u\u017csze = bardziej p\u0142ynne przej\u015bcie\n\nsustain_level (bezwymiarowy) - poziom podtrzymania\n\n    - Wp\u0142yw: G\u0142o\u015bno\u015b\u0107 w fazie podtrzymania\n    - Typowe warto\u015bci: 0.5-0.9\n    - Eksperyment: Ni\u017csze = bardziej \"wokalne\" brzmienie\n\nrelease_time (s) - czas zanikania\n\n    - Wp\u0142yw: Jak szybko d\u017awi\u0119k zanika po zwolnieniu klawisza\n    - Typowe warto\u015bci: 0.3-1.0 s\n    - Eksperyment: D\u0142u\u017csze = bardziej \"ko\u015bcielne\" brzmienie\n\nnoise_attack (s) - czas ataku komponentu szumowego\n\n    - Wp\u0142yw: Jak szybko pojawia si\u0119 szum ataku\n    - Typowe warto\u015bci: 0.01-0.05 s\n    - Eksperyment: Kr\u00f3tsze = bardziej wyra\u017ane \"chiff\"\n</code></pre>"},{"location":"phisis/#zalecane-eksperymenty","title":"Zalecane eksperymenty","text":"<pre><code>Eksperyment z f0 i pipe_length:\n\n    - Ustaw f0=440, pipe_length=2.5\n    - Zmieniaj pipe_length (1.25, 5.0) i obserwuj zmiany w spektrum\n\nEksperyment z modulacjami:\n\n    - Ustaw mod_depth=0, lfo_freq=5\n    - Stopniowo zwi\u0119kszaj mod_depth (0.001, 0.005, 0.01)\n    - Zmieniaj lfo_freq (2, 5, 10 Hz)\n\nEksperyment z szumem:\n\n    - Ustaw noise_level=0.01, rate_scale=0.3\n    - Zwi\u0119kszaj noise_level do 0.1\n    - Zmieniaj rate_scale (0.1, 0.5)\n\nEksperyment z rezonatorem:\n\n    - Zmieniaj lp_coeffs[0] (0.7, 0.85, 0.95)\n    - Testuj r\u00f3\u017cne tfbk (0.5, 0.7, -0.7)\n\nEksperyment z obwiedni\u0105:\n\n    - Ustaw kr\u00f3tki attack_time (0.05) i d\u0142ugi release_time (1.0)\n    - Por\u00f3wnaj z d\u0142ugim attack_time (0.2) i kr\u00f3tkim release_time (0.3)\n</code></pre>"},{"location":"preset/","title":"Preset","text":"<p>```toml</p> <p>sample_name = \"Friesach\" last_preset_index = 1</p> <p>[[presets]] preset = 1</p> <p>[[presets.divisions]]   name = \"Pedale\"   stops = [</p> <p>]</p>"}]}